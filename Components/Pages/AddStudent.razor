@page "/AddStudent"
@rendermode InteractiveServer

@* using a shared component as the displayed title across this app  *@
<PageTitle> Add Student</PageTitle>
<RegistrarTitle> Add New Student </RegistrarTitle> 




<EditForm class="form border border-1 bg-light p-5 mb-5"
            FormName="NewStudentForm"
          Model="NewStudentData"
          OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
    <h3 class="mb-3 text-center">New Student</h3>

    <div class="form-field mb-3 text-center">
        <label class="form-label" for="firstName">First Name</label>
        <InputText class="form-control" @bind-Value="NewStudentData.FirstName" id="firstName" />
        <ValidationMessage For="() => NewStudent.FirstName" />

    </div>

    <div class="form-field mb-3 text-center">
        <label class="form-label" for="lastName">Last Name</label>
        <InputText class="form-control" @bind-Value="NewStudentData.LastName" id="lastName" />
        <ValidationMessage For="() => NewStudent.LastName" />
    </div>

    <div class="form-group mb-3 text-center">
        <label for="studentType">Select Type</label>
        
        <InputSelect class="form-control" @bind-Value="NewStudentData.StudentType" id="studentType">
            <option value="" disabled selected>Select a student type</option>
            @foreach (var type in StudentTypes)
            {
                <option value="@type">@type</option>
            }
        </InputSelect>
        <ValidationMessage For="() => NewStudentData.StudentType" />

    </div>


    <button class="btn btn-primary" type="submit" >Add Student</button>

    <div class="btn btn-secondary text-center m-0">
        <span><a class="text-light text-decoration-none" href="/">Cancel</a></span>
    </div>
</EditForm>

@code{

    public class AddStudentModel
    {
        [Required (ErrorMessage="Please enter First Name")]
        public string? FirstName { get; set; }
        [Required (ErrorMessage="Please enter Last Name")]
        public string? LastName { get; set; }
        [Required (ErrorMessage="Please select Student Type")]
        public string? StudentType { get; set; }
    }
    
    public AddStudentModel NewStudentData = new AddStudentModel();

    public Student NewStudent = new Student();
    private List<string> StudentTypes = new List<string> { "Full Time", "Part Time", "Coop" };

    private static readonly Random random = new Random();
    private static int GetStudentNumber()
    {
    string s = "";
    for (int i = 0; i < 6; i++)
       { s +=  random.Next(10).ToString();};
    int number = 0;
    int.TryParse(s, out number);
    return number;
    }
@* action upon submitting valid input fields  *@
   private void HandleValidSubmit()
   {
    // generate StudentId
    NewStudent.Id = GetStudentNumber();
    // bind data from form
    NewStudent.FirstName = NewStudentData.FirstName;
    NewStudent.LastName = NewStudentData.LastName;
    NewStudent.Type = NewStudentData.StudentType;
    
    Console.WriteLine($"new student's id is {NewStudent.Id} and called {NewStudent.FirstName}"); // correct
    // send data to DB
    // TODO: excute sql change
    // reload student data on Home
    // TODO: event call back
    // clear instance of data model
    NewStudentData = new AddStudentModel();
   }

}

